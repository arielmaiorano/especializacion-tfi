package est.tfi.android;

import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.security.SecureRandom;

import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

public class MonedaAlAireActivity extends Activity implements OnClickListener {

	public Button btnEnviar;
	public Button btnRecibir;
	public TextView tvCentro;
	public static MonedaAlAireActivity __instancia;
	
	public boolean _esperando_pregunta = false;
	public boolean _esperando_respuesta = false;
	public boolean _esperando_confirmacion = false;
	public String _numero_aleatorio = "";
	public String _cara_o_seca = "";
	public String _sha512_en_uso = "";
	

	/** Called when the activity is first created. */
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.main);

		btnEnviar = (Button) findViewById(R.id.button1);
		btnRecibir = (Button) findViewById(R.id.button2);
		btnEnviar.setOnClickListener(this);
		btnRecibir.setOnClickListener(this);

		tvCentro = (TextView) findViewById(R.id.textView1);
		
		__instancia = this;
	}

	public void logPantalla(String str, boolean agrega)	{
		if (tvCentro.getTextSize() != 12.0)	{
			tvCentro.setTextSize(12);
			tvCentro.setTextColor(Color.GREEN);
		}
		if (agrega)	{
			tvCentro.setText(tvCentro.getText() + "\n"
					+ str);
		} else	{
			tvCentro.setText("\n\n\n\n" + str);
		}
	}

	public void jugarOtraVez()	{
		finish();
		startActivity(getIntent());
	}
	
	public void resultadoJuego(boolean ganaste)	{
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		builder.setTitle("Resultado");
		builder.setMessage(ganaste ? "GANASTE!" : "PERDISTE!");
		builder.setPositiveButton("Volver a Jugar",
			new DialogInterface.OnClickListener() {
				public void onClick(DialogInterface dialog, int which) {
					jugarOtraVez();
				}
			});
		AlertDialog alert = builder.create();
		alert.show();
	}

	public void onClick(View v) {
		
		if (v.getId() == R.id.button1 || v.getId() == R.id.button2) {
			TextView firma = (TextView) findViewById(R.id.textView2);
			firma.setVisibility(View.INVISIBLE);
			btnEnviar.setVisibility(View.INVISIBLE);
			btnRecibir.setVisibility(View.INVISIBLE);
		}

		if (v.getId() == R.id.button1) {
			
			logPantalla("Tirando moneda...",  false);
			
			// número aleatorio de 16 bytes
			SecureRandom sr = new SecureRandom();
			byte[] randomBytes = new byte[16];
			sr.nextBytes(randomBytes);
			BigInteger randomNum = new BigInteger(1,
					randomBytes);
			String randomStr = String
					.format("%032x", randomNum);
			logPantalla(" - número aleatorio (16 bytes): "
					+ randomStr, true);
			
			_numero_aleatorio = randomStr;

			// cara o seca (par o impar)?
			boolean resultoCara = false;
			if (randomNum.mod(BigInteger.valueOf(2)) == BigInteger.ZERO) {
				logPantalla(" - resultó número par: CARA.", true);
				resultoCara = true;
				_cara_o_seca = "CARA";
			} else {
				logPantalla(" - resultó número impar: SECA.", true);
				_cara_o_seca = "SECA";
			}

			// sha-512 del número aleatorio
			String hashStr = "";
			try {
				MessageDigest md = MessageDigest
						.getInstance("SHA-512");
				byte[] hashBytes = md.digest(randomBytes);
				hashStr = String.format("%0128x",
						new BigInteger(1, hashBytes));
				logPantalla(" - SHA-512 del número aleatorio: "
						+ hashStr, true);
			} catch (NoSuchAlgorithmException e) {
				logPantalla("ERROR: PROTOCOLO SHA-512 NO SOPORTADO.", true);
				return;
			}

			_sha512_en_uso = hashStr;
			
			logPantalla(" - se enviará SMS y esperará respuesta...", true);
			
			try {
				Intent sendIntent = new Intent(
						Intent.ACTION_VIEW);
				sendIntent.putExtra("sms_body", "+++CARAOSECA?"
						+ hashStr);
				sendIntent.putExtra("exit_on_sent", true);
				sendIntent.setType("vnd.android-dir/mms-sms");
				startActivity(sendIntent);
			} catch (Exception e) {
				logPantalla("ERROR: ENVIO SMS NO PERMITIDO.", true);
				return;
			}
			
			_esperando_respuesta = true;
			
		} else if (v.getId() == R.id.button2) {

			logPantalla("Esperando pregunta...",  false);

			_esperando_pregunta = true;
		}
	}
}